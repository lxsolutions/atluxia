version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: atluxia
      POSTGRES_USER: atluxia
      POSTGRES_PASSWORD: atluxia123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U atluxia"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Create MinIO bucket
  create-buckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/atluxia;
      /usr/bin/mc anonymous set download myminio/atluxia;
      exit 0;
      "

  # Frontend Applications
  nomad-web:
    build:
      context: ../..
      dockerfile: apps/nomad-web/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://atluxia:atluxia123@postgres:5432/atluxia
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY_ID=minioadmin
      - S3_SECRET_ACCESS_KEY=minioadmin
      - S3_BUCKET_NAME=atluxia
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ../../apps/nomad-web:/app
      - /app/node_modules
    command: pnpm dev

  polyverse-web:
    build:
      context: ../..
      dockerfile: apps/polyverse-web/Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://atluxia:atluxia123@postgres:5432/atluxia
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY_ID=minioadmin
      - S3_SECRET_ACCESS_KEY=minioadmin
      - S3_BUCKET_NAME=atluxia
      - OPENGRID_API_URL=http://opengrid:3002
      - AI_ROUTER_URL=http://ai-router:8000
      - RELAY_URL=http://relay:8080
      - ACTIVITYPUB_BRIDGE_URL=http://activitypub-bridge:3004
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ../../apps/polyverse-web:/app
      - /app/node_modules
    command: pnpm dev

  # Nomad Services
  booking:
    build:
      context: ../..
      dockerfile: services/booking/Dockerfile
    ports:
      - "3007:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://atluxia:atluxia123@postgres:5432/atluxia
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  drivers:
    build:
      context: ../..
      dockerfile: services/drivers/Dockerfile
    ports:
      - "3008:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://atluxia:atluxia123@postgres:5432/atluxia
    depends_on:
      postgres:
        condition: service_healthy

  immigration:
    build:
      context: ../..
      dockerfile: services/immigration/Dockerfile
    ports:
      - "3009:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://atluxia:atluxia123@postgres:5432/atluxia
    depends_on:
      postgres:
        condition: service_healthy

  vehicles:
    build:
      context: ../..
      dockerfile: services/vehicles/Dockerfile
    ports:
      - "3010:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://atluxia:atluxia123@postgres:5432/atluxia
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Polyverse Services
  opengrid:
    build:
      context: ../..
      dockerfile: services/opengrid/Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://atluxia:atluxia123@postgres:5432/atluxia
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  ai-router:
    build:
      context: ../..
      dockerfile: services/ai-router/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development

  relay:
    build:
      context: ../..
      dockerfile: services/relay/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy

  activitypub-bridge:
    build:
      context: ../..
      dockerfile: services/activitypub-bridge/Dockerfile
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=development

  truth-agent:
    build:
      context: ../..
      dockerfile: services/truth-agent/Dockerfile
    ports:
      - "3005:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://atluxia:atluxia123@postgres:5432/atluxia
    depends_on:
      postgres:
        condition: service_healthy

  truth-graph:
    build:
      context: ../..
      dockerfile: services/truth-graph/Dockerfile
    ports:
      - "3006:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://atluxia:atluxia123@postgres:5432/atluxia
    depends_on:
      postgres:
        condition: service_healthy

  # Curio-Critters Services
  critters-web:
    build:
      context: ../..
      dockerfile: apps/critters-web/Dockerfile
    ports:
      - "3005:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:56456
    volumes:
      - ../../apps/critters-web:/app
      - /app/node_modules
    command: pnpm dev

  critters-api:
    build:
      context: ../..
      dockerfile: services/critters-api/Dockerfile
    ports:
      - "56456:56456"
    environment:
      - NODE_ENV=development
      - PORT=56456
      - DATABASE_URL=postgresql://atluxia:atluxia123@postgres:5432/atluxia
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  minio_data: