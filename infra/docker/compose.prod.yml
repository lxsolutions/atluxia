version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: atluxia
      POSTGRES_USER: atluxia
      POSTGRES_PASSWORD: atluxia123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U atluxia"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Object Storage (S3 compatible)
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: atluxia
      MINIO_ROOT_PASSWORD: atluxia123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  # Unified Web Application
  unified-webapp:
    build:
      context: ../../
      dockerfile: apps/unified-webapp/Dockerfile
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://atluxia:atluxia123@postgres:5432/atluxia
      NEXTAUTH_URL: https://atluxia.com
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NOMAD_API_URL: http://nomad-api:3000/api
      POLYVERSE_API_URL: http://polyverse-api:3001/api
      EVERPATH_API_URL: http://everpath-api:3003/api
      CRITTERS_API_URL: http://critters-api:56456/api
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Services (example - would need actual service implementations)
  nomad-api:
    image: node:20-alpine
    working_dir: /app
    command: ["node", "server.js"]
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://atluxia:atluxia123@postgres:5432/atluxia
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy

  polyverse-api:
    image: node:20-alpine
    working_dir: /app
    command: ["node", "server.js"]
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://atluxia:atluxia123@postgres:5432/atluxia
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy

  everpath-api:
    image: node:20-alpine
    working_dir: /app
    command: ["node", "server.js"]
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://atluxia:atluxia123@postgres:5432/atluxia
    ports:
      - "3003:3003"
    depends_on:
      postgres:
        condition: service_healthy

  critters-api:
    image: node:20-alpine
    working_dir: /app
    command: ["node", "server.js"]
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://atluxia:atluxia123@postgres:5432/atluxia
    ports:
      - "56456:56456"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  minio_data: