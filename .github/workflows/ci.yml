name: Atluxia CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20.x'
  PNPM_VERSION: '9.x'

jobs:
  setup:
    name: Setup and Install
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-deps.outputs.cache-key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.STORE_PATH }}
            node_modules
            */node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Cache key output
        id: cache-deps
        run: echo "cache-key=${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}" >> $GITHUB_OUTPUT

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
            */node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run lint
        run: pnpm lint

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
            */node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run typecheck
        run: pnpm typecheck

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [setup, lint, typecheck]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
            */node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run build
        run: pnpm build

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: setup
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: atluxia_test
          POSTGRES_USER: atluxia
          POSTGRES_PASSWORD: atluxia123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
            */node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run tests
        run: pnpm test
        env:
          DATABASE_URL: postgresql://atluxia:atluxia123@localhost:5432/atluxia_test
          REDIS_URL: redis://localhost:6379
          NODE_ENV: test

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [setup, build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    strategy:
      matrix:
        service:
          - nomad-web
          - polyverse-web
          - everpath-web
          - everpath-admin
          - integration
          - booking
          - drivers
          - immigration
          - vehicles
          - opengrid
          - activitypub-bridge
          - truth-agent
          - truth-graph

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./apps/${{ matrix.service }}/Dockerfile
        push: false
        tags: atluxia/${{ matrix.service }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
            */node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run security audit
        run: pnpm audit --audit-level high

  summary:
    name: Summary
    runs-on: ubuntu-latest
    needs: [lint, typecheck, build, test, docker, security]
    if: always()
    steps:
      - name: CI Summary
        run: |
          echo "Atluxia CI Pipeline Summary"
          echo "=========================="
          echo "Lint: ${{ needs.lint.result }}"
          echo "TypeCheck: ${{ needs.typecheck.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo "Test: ${{ needs.test.result }}"
          echo "Docker: ${{ needs.docker.result }}"
          echo "Security: ${{ needs.security.result }}"
          echo ""
          echo "All checks completed!"