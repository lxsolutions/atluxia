name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test, Lint, Build
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: atluxia
          POSTGRES_USER: atluxia
          POSTGRES_PASSWORD: atluxia123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Generate Prisma client
      run: pnpm db:generate

    - name: Run linting
      run: pnpm lint

    - name: Run type checking
      run: pnpm typecheck

    - name: Run tests
      run: pnpm test

    - name: Build packages
      run: pnpm build

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        service:
          - apps/nomad-web
          - apps/polyverse-web
          - apps/everpath-web
          - apps/critters-web
          - services/booking
          - services/drivers
          - services/vehicles
          - services/immigration
          - services/activitypub-bridge
          - services/opengrid/coordinator
          - services/everpath-api
          - services/critters-api

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ matrix.service }}/Dockerfile
        push: false
        tags: atluxia/${{ matrix.service }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max